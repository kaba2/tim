TIM blog
========

Signals with undefined values
-----------------------------

Our aim to is to deal with realizations of stochastic processes,
or trajectories of dynamical systems. Both of these result in
a sequence in 'RR^d'. However, we can only ever obtain a finite
amount of values from this sequence. Usually it is an interval
in time, but sometimes it may consists of multiple intervals of
time, if some data is destroyed or can not be relied upon. Therefore,
we define a signal as a function from a subset of ''NN'' to ''RR^d''.

### Y-fast trie

+ General and fast.
+ Easy to handle in algorithms.
+ Ideal for C++ side.

Provide:

 * A function to convert from an ordered time-set + time-ordered point-set
 to a signal, and vice versa.

### Time-ordered point-set + starting time

This is an array `pointSet` and an integer `startTime`,
such that `pointSet(:, i)` contains the value of the signal
at time `startTime + (i - 1)`.

+ Easy to handle in algorithms.
- Not general enough.

### Ordered time-set + time-ordered point-set

This is an array `timeSet` and an array `pointSet`,
such that `pointSet(:, i)` contains the value of
the signal at time `timeSet(i)`.

+ Easy to handle in algorithms.
+ Easy to handle in Matlab, since arrays.
- Too slow to add and remove points.
- Can not enforce that there is at most one value per
time instant (function).

### Time-ordered point-set + nans

This is an array `pointSet` such that `pointSet(:, i)`
contains the value of the signal at time `i - 1`. However,
if any element of the `pointSet(:, i)` is nan, then the 
time-instant is interpreted as undefined.

- Hard to use everywhere.
- Too slow to check whether a given time instant
exists, and to find where the next non-nan is.
