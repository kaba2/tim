{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Norm",
				"NormBijection_Archetype"
			],
			[
				"Br",
				"BruteForce_NearestSet"
			],
			[
				"Ne",
				"NearestSet_Concept"
			],
			[
				"Bru",
				"BruteForce_NearestSet_Settings"
			],
			[
				"Brute",
				"BruteForce_NearestSet"
			],
			[
				"Multi",
				"MultiInteger_Settings_Concept"
			],
			[
				"Remove",
				"RemoveCvRef"
			],
			[
				"First",
				"FirstModeledConcept_F"
			],
			[
				"Type",
				"TypeFunctionInstance_Concept"
			],
			[
				"IsTy",
				"IsTypeFunction_"
			],
			[
				"substituteP",
				"substitutePropertySet"
			],
			[
				"uni",
				"unixRelativePath"
			]
		]
	},
	"buffers":
	[
		{
			"file": "CMakeLists.txt",
			"settings":
			{
				"buffer_size": 13716,
				"line_ending": "Unix"
			}
		},
		{
			"file": "tim/core/signalpointset.h",
			"settings":
			{
				"buffer_size": 5411,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 81.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 382.0,
		"history":
		[
			"import urllib.request,os; pr='Preferences.sublime-settings'; ip='ignored_packages'; n='Package Control'; s=sublime.load_settings(pr); ig=s.get(ip); ig.append(n); s.set(ip,ig); sublime.save_settings('Preferences.sublime-settings'); pf=n+'.sublime-package'; urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler())); by=urllib.request.urlopen('https://packagecontrol.io/'+pf.replace(' ','%20')).read(); open(os.path.join(sublime.installed_packages_path(),pf),'wb').write(by); ig.remove(n); s.set(ip,ig); sublime.save_settings(pr); print('Package Control: 3.0.0 upgrade successful!')",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": false,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Code/tim",
		"/C/Code/tim/tim"
	],
	"file_history":
	[
		"/C/Code/tim/tim/core2/entropy_combination.h",
		"/C/Code/tim/tim/tim.sublime-project",
		"/C/Code/tim/tim/CMakeLists.txt",
		"/C/Code/tim/tim/core2/signal_concept.h",
		"/C/Code/pastel/pastel/geometry/nearestset/nearestset_point.h",
		"/C/Code/pastel/pastel/geometry/nearestset/nearestset_concept.h",
		"/C/Code/pastel/pastel/geometry/nearestset/nearestset_pointset.h",
		"/C/Code/pastel/pastel/geometry/nearestset/nearestset.txt",
		"/C/Code/pastel/pastel/sys/type_traits/not.h",
		"/C/Code/pastel/pastel/sys/type_traits/and.h",
		"/C/Code/pastel/pastel/sys/type_traits/or.h",
		"/C/Code/pastel/pastel/sys/concept/coarsest_failed_concept.h",
		"/C/Code/pastel/pastel/sys/concept/most_refined_concept.h",
		"/C/Code/pastel/pastel/geometry/nearestset/nearestset_real.h",
		"/C/Code/pastel/build64/pastel/geometry/PastelGeometry.sln",
		"/C/Code/pastel/pastel.txt",
		"/C/Code/tim/tim/+tim/predict_all.m",
		"/C/Code/pastel/docs/pastel/geometry/nearestset/bruteforce_nearestset.h.htm",
		"/C/Code/pastel/pastel/geometry/nearestset/bruteforce_nearestset.h",
		"/C/Code/pastel/pastel/sys/concept/models.h",
		"/C/Code/tim/tim/core/mytypes.h",
		"/C/Code/pastel/pastel/sys/concept/concept.txt",
		"/C/Code/pastel/pastel/sys/concept.h",
		"/C/Code/tim/CMakeLists.txt",
		"/C/Code/pastel/pastel/gfx/color/color_space/color_xyy.h",
		"/C/Code/pastel/images/maximum_clique_alignedbox.vsd",
		"/C/Code/pastel/build64/test/gfxtest/texture_checker3_NearestImage_5.pcx",
		"/C/Code/pastel/pastel/sys/vector/vectorexpression_concept.h",
		"/C/Code/pastel/pastel/geometry/pointkdtree/pointkdtree_count_range.h",
		"/C/Code/pastel/pastel/sys/alignedbox.h",
		"/C/Code/pastel/test/systest/test_ieee_float.cpp",
		"/C/Code/pastel/pastel/sys/intersect_alignedbox_alignedbox.h",
		"/C/Code/pastel/pastel/sys/real/ieee_float.h",
		"/C/Code/pastel/pastel/gfx/image_processing/image_eroding.h",
		"/C/Code/tim/implementation.txt",
		"/C/Code/tim/tim/console/test_input.txt",
		"/C/Code/tim/test/coretest/test_divergence.cpp",
		"/C/Code/pastel/pastel/sys/testing.h",
		"/C/Code/pastel/test/geometrytest/test_search_nearest_bruteforce.cpp",
		"/C/Code/tim/tim/+tim/transfer_entropy.m",
		"/C/Code/tim/tim.txt",
		"/C/Code/tim/test/coretest/test_signal.cpp",
		"/C/Code/tim/tim/core/tsallis_entropy.h",
		"/C/Code/tim/tim/+tim/tsallis_entropy_lps_t.m",
		"/C/Code/pastel/pastel/sys/automaton/productive_states.txt",
		"/C/Code/pastel/docs/pastel/sys/tristate.h.htm",
		"/C/Code/pastel/pastel/sys/tristate.h",
		"/C/Code/pastel/docs/pastel/sys/tristate/tristate.h.htm",
		"/C/Code/pastel/pastel/sys/input/transform_input.h",
		"/C/Code/tim/test/coretest/test_reconstruction.cpp",
		"/C/Code/pastel/pastel/geometry/intersect.h",
		"/C/Code/pastel/pastel/geometry/intersect/intersect_triangle_triangle.h",
		"/C/Code/pastel/pastel/sys/integer/integers.txt",
		"/C/Code/pastel/adaptable_iterator_notes.txt",
		"/C/Code/pastel/pastel/sys/indicator/all_indicator.h",
		"/C/Code/pastel/pastel/sys/locator/array_locator.h",
		"/C/Code/pastel/adaptable_iterator.txt",
		"/C/Code/pastel/build64/Pastel.sln",
		"/C/Code/pastel/build64/test/systest/pastelsystest.dir/MinSizeRel/pastelsystest.vcxprojResolveAssemblyReference.cache",
		"/C/Code/pastel/build64/CMakeFiles/3.1.0-rc3/CMakeSystem.cmake",
		"/C/Code/pastel/pastel_license.txt",
		"/C/Code/pastel/build64/test/PastelTest.sln",
		"/C/Code/pastel/pastel/math/affine/affine_scaling.h",
		"/C/Code/tim/tim/console/ast.h",
		"/C/Code/pastel/pastel/sys/integer/multi_integer.h",
		"/C/Code/pastel/pastel/sys/type_traits.h",
		"/C/Code/pastel/pastel/sys/type_traits/type_traits.txt",
		"/C/Code/pastel/pastel/sys/type_traits/fold.h",
		"/C/Code/pastel/pastel/sys/type_traits/is_template_base_of.h",
		"/C/Code/pastel/pastel/sys/type_traits/is_template_instance.h",
		"/C/Code/pastel/pastel/sys/type_traits/remove_cvref.h",
		"/C/Code/pastel/pastel/sys/type_traits/template_base.h",
		"/C/Code/pastel/pastel/sys/difference_alignedbox_alignedbox.h",
		"/C/Code/pastel/test/systest/test_named_parameters.cpp",
		"/C/Code/pastel/pastel/sys/integer/integer_notes.txt",
		"/C/Code/pastel/pastel/sys/integer/multi_integer/multi_integer.txt",
		"/C/Code/pastel/pastel/sys/integer/multi_integer/multi_integer_stream.hpp",
		"/C/Code/tim/tim/matlab/matlab_differential_entropy_uniform.cpp",
		"/C/Code/pastel/pastel/+pastelsys/integer_concept.m",
		"/C/Code/pastel/pastel/sys/random/random_integer.txt",
		"/C/Code/pastel/pastel/sys/integer/native_integer.txt",
		"/C/Code/pastel/pastel/sys/integer.h",
		"/C/Code/pastel/pastel/sys/trindicator/indicator_trindicator.h",
		"/C/Code/pastel/test/gfxtest/test_noise.cpp",
		"/C/Code/pastel/test/mathtest/test_normbijection.cpp",
		"/C/Code/pastel/named_parameter.txt",
		"/C/Code/pastel/pastel/math/normbijection/normbijection_archetype.h",
		"/C/Code/pastel/pastel/geometry/difference.h",
		"/C/Code/tim/tim/console/demo_input.txt",
		"/C/Code/tim/dependencies.txt",
		"/C/Code/tim/tim/core/temporal_estimation.txt",
		"/C/Code/pastel/build64/test/gfxtest/texture_ewa_magnification.pcx",
		"/C/Code/tim/remark_options",
		"/C/Code/tim/tim/core/renyi_entropy.h",
		"/C/Code/pastel/restrict_deduction.txt",
		"/C/Code/pastel/docs/pastel/sys/type_traits/not.h.htm",
		"/C/Code/pastel/pastel/gfx/texture/noise_texture.h",
		"/C/Code/pastel/pastel/math/normbijection/normbijection_concept.h",
		"/C/Code/pastel/pastel/math/normbijection.h",
		"/C/Code/pastel/pastel/sys/interval_sequence.h",
		"/C/Code/pastel/pastel/sys/concept/is_refined.h",
		"/C/Code/pastel/pastel/sys/bit/flip_leading_one_bits.h",
		"/C/Code/pastel/forward_declaration.txt",
		"/C/Code/pastel/pastel/sys/algebra/ordered_ring_concept.h",
		"/C/Code/pastel/pastel/sys/output.h",
		"/C/Code/pastel/docs/pastel/sys/type_traits.h.htm",
		"/C/Code/pastel/pastel/sys/type_checks.h",
		"/C/Code/pastel/warnings.txt",
		"/C/Code/pastel/test/systest/test_concept.cpp",
		"/C/Code/pastel/pastel/sys/sequence/exponential_binary_search.h",
		"/C/Code/pastel/pastel/geometry/area.h",
		"/C/Code/pastel/pastel/sys/graph/breadth_first.h",
		"/C/Code/pastel/pastel/sys/graph/breadth_first/breadth_first.h",
		"/C/Code/pastel/docs/test/systest/test_breadth_first_traversal.cpp.htm",
		"/C/Code/pastel/test/systest/test_breadth_first_traversal.cpp",
		"/C/Code/tim/blog.txt",
		"/C/Code/tim/tutorials/common/export_fig/export_fig.m",
		"/C/Code/tim/tim/+tim_example/example_poincare_section.m",
		"/C/Code/tim/tim/+tim_example/example_henon.m",
		"/C/Code/pastel/pastel/sys/ensure.h",
		"/C/Code/pastel/test/gfxtest/test_convolute.cpp",
		"/C/Code/pastel/test/gfxtest/test_color.cpp",
		"/C/Dropbox/migreenit.txt",
		"/C/Code/pastel/pastel/sys/algebra/additive_semigroup_concept.h",
		"/C/Code/pastel/pastel/sys/concept/first_modeled_concept.h",
		"/C/Code/pastel/pastel/math/conformalaffine2d/conformalaffine2d_algorithms.h",
		"/C/Code/pastel/pastel/sys/concept/concept.h",
		"/C/Code/pastel/pastel/sys/extender/mirrorextender.h"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"j",
			"element",
			"i",
			"Result",
			"typename Type::Real",
			"typename Type::PointSet",
			"locator",
			"locator_",
			"Entry",
			"Point_Entry",
			"IntroAlgo",
			"formalization",
			"definition",
			"definition ",
			"T_2(n)",
			"T_1(n)",
			"t_2(n)",
			"t_1(n)",
			"’",
			"n2",
			"T1",
			"T2",
			"M2",
			"m1",
			"t1",
			"t2",
			">=",
			"<=",
			"parameterInfo",
			"IsRational<Type>",
			"bestError",
			"Float",
			"MantissaBits",
			"ExponentBits",
			"negate(",
			"floor(",
			"MostRefinedConcept",
			"std::true_type test",
			"And",
			"{\n",
			"constexpr",
			"check(",
			"check",
			"kernel",
			"LIB",
			"kernel32",
			"winv",
			"{Restrict}",
			"average-case",
			"{Notation",
			"{InjectiveSuper",
			"InjectiveSuper",
			"ZeroTrivialityIsImplied",
			"roh",
			"{Misconceptions",
			"biblio",
			"asymptotic",
			"does not make sense",
			"non-",
			"super-comp",
			"ub-homog",
			"Composability",
			"ub-compos",
			"ocality",
			"cale-invari",
			"rder-consistency",
			"eflexivity",
			"Positive scale-invariance",
			"ransitivity",
			"ero-separation",
			"ne-separation",
			"sub-composability",
			"composability",
			"Injective composability",
			"Super-multiplicativity",
			"Super-homogenuity",
			"[\\Property",
			"[\\property",
			"{\\property",
			"Sub-composability",
			"Injective sub-composability",
			"One-separation",
			"Zero-separation",
			"Super-hom",
			"Lattice",
			"DominanceRelationIsALattice",
			"\\brac",
			"<",
			"|",
			"The $\\ohsy",
			"BigOhForPositive",
			"order-cons",
			"{Order}",
			"The $\\ohs{X}$",
			"{Order}",
			"order-cons",
			"order-co",
			"SubMulti",
			"SubsetSum",
			"subset-sum",
			"Neighborhood linear",
			"[A-Z][ \\t]*:[ \\t]*.[ \\t]*\\\\to[ \\t]*.",
			"Written expli",
			"LocalSuperHomogenuityCharacterized",
			"AffineSubMultiplicativityFails",
			"AffineSubMultiplicativityCharacterization",
			"AffineZeroSeparation",
			"AffineOneSeparation",
			"TrivialOneSeparation",
			"TrivialZeroSeparation",
			"Positive scale",
			"Sub-multiplicativity for",
			"LocalSubHom",
			"$\\checkmark$",
			"\\checkmark",
			"Sub-mul",
			"{SubMulti}",
			"SuperMultiplic",
			"\\require{One}",
			"SubMultiplic",
			"u > 0",
			"\n\\",
			"sub-homo",
			"\\require{SubHom",
			"GeneralSub",
			"General",
			"eneral ",
			"{General"
		],
		"highlight": true,
		"in_selection": true,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"i",
			"component",
			"group",
			"type",
			"Real",
			"PointSet",
			"W_2(n)",
			"W_1(n)",
			"w_2(n)",
			"w_1(n)",
			"'",
			"n_2",
			"T_1",
			"T_2",
			"M_2",
			"m_1",
			"t_1",
			"t_2",
			"\\geq",
			"\\leq",
			"Pastel::Ensure_::parameterInfo",
			"IsTemplateInstance<Type, Rational>",
			"minError",
			"Real",
			"M",
			"E",
			"MostRefinedFailedConcept",
			"Or",
			"PASTEL_CONSTEXPR",
			"conceptCheck(",
			"conceptCheck",
			"loh",
			"\\property{Scale}",
			"\\property{IComp}",
			"\\property{SuperMulti}",
			"\\property{SuperHom}",
			"[\\property",
			"[\\uppercase\\property",
			"[\\Property",
			"\\property{SubComp}",
			"\\property{One}",
			"\\property{Zero}",
			"<",
			"OhForPositive",
			"$\\ohs{X}$",
			"AffineSubHomogenuityFails",
			"AffineSubHomogenuityCharacterization",
			"AffineZeroSeparationFails",
			"AffineOneSeparationFails",
			"TrivialZeroSeparationFails",
			"\\checkmark",
			"Sub",
			"{",
			"{ScalarHom}",
			"ScalarHomogenuityIsImplied",
			"LocalGeneralSubHomogenuity",
			"GeneralHomogenuityIsImplied",
			"SubRestrictabilityIsImplied",
			"F : \\algof{X}{Y}",
			"\\bar",
			"\\widebar",
			"\\bars",
			"\\bar",
			"\\widebar",
			"\\\\rc{$1}",
			"\\rc{",
			"\\rc",
			"\\\\rc",
			"\\rc",
			"\\\\rc{$1}",
			"\\rc{$1}",
			"\\\\rc{X}",
			"\\rc{X}",
			"local",
			"Local",
			"ZeroTrivialityIsImplied",
			"sprove",
			"ref",
			"tref",
			"has \\require",
			"{Additive}",
			"\\require{SubComp}",
			"\\require{ISubComp}",
			"\\require{SubMulti}",
			"\\require{Local}",
			"\\require{Scale}",
			"\\require{One}",
			"\\require{Zero}",
			"\\require{Trans}",
			"\\require{Reflex}",
			"\\require{Order}",
			"keyword",
			"proofRegex",
			"scanTheorem",
			"\\proveby",
			"\\propertydef",
			"\\require",
			"replaced",
			"\\assume{Translation}",
			"\\assume{Additivity}",
			"\\property{Restrict}",
			"\\prove{One}",
			"\\assume{Zero}",
			"\\assume{One}",
			"\\prove{1}",
			"\\assume{1}",
			"\\assume{0}",
			"\\assume{Trans}",
			"\\assume{Order}",
			"\\assume{Reflex}",
			"\\assume{Order}",
			"\\assume{Order},",
			"\\assume{Order}",
			"\\assume{Local}",
			"\\assume{Scale}",
			"\\assume{Trans}",
			"\\assume{1}",
			"\\assume{SubComp}",
			"\\assume{ISubComp}",
			"\\assume{SubMulti}",
			"By \\assume{Scale}",
			"By \\assume{Reflex}",
			", \\\\assume{$1}",
			"",
			"\\aref",
			"\\eref",
			"\\taref",
			"\\tref"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": true,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "CMakeLists.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 13716,
						"regions":
						{
						},
						"selection":
						[
							[
								13015,
								13015
							]
						],
						"settings":
						{
							"syntax": "Packages/CMake/CMake.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7551.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "tim/core/signalpointset.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5411,
						"regions":
						{
						},
						"selection":
						[
							[
								3024,
								3024
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 1881.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 258.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "tim.sublime-project",
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"signalpoint",
				"tim\\core\\signalpointset.h"
			],
			[
				"cm",
				"CMakeLists.txt"
			],
			[
				"cma",
				"CMakeLists.txt"
			],
			[
				"real_con",
				"core2\\signal_concept.h"
			],
			[
				"core2",
				"core2\\entropy_combination.h"
			],
			[
				"nearestset",
				"pastel\\pastel\\geometry\\nearestset\\nearestset.txt"
			],
			[
				"nearestset_",
				"pastel\\pastel\\geometry\\nearestset\\nearestset_concept.h"
			],
			[
				"nearestset_real",
				"pastel\\pastel\\geometry\\nearestset\\nearestset_real.h"
			],
			[
				"most_refine",
				"pastel\\pastel\\sys\\concept\\most_refined_concept.h"
			],
			[
				"coarsest",
				"pastel\\pastel\\sys\\concept\\coarsest_failed_concept.h"
			],
			[
				"not.h",
				"pastel\\pastel\\sys\\type_traits\\not.h"
			],
			[
				"or.h",
				"pastel\\pastel\\sys\\type_traits\\or.h"
			],
			[
				"and.h",
				"pastel\\pastel\\sys\\type_traits\\and.h"
			],
			[
				"test_iee",
				"pastel\\test\\systest\\test_ieee_float.cpp"
			],
			[
				"ieee_f",
				"pastel\\pastel\\sys\\real\\ieee_float.h"
			],
			[
				"intersect_ali",
				"pastel\\pastel\\sys\\intersect_alignedbox_alignedbox.h"
			],
			[
				"alignedbox",
				"pastel\\pastel\\sys\\alignedbox.h"
			],
			[
				"multi",
				"pastel\\pastel\\sys\\integer\\multi_integer.h"
			],
			[
				"integer_notes",
				"pastel\\pastel\\sys\\integer\\integer_notes.txt"
			],
			[
				"integer.txt",
				"pastel\\pastel\\sys\\integer\\integers.txt"
			],
			[
				"test_named",
				"pastel\\test\\systest\\test_named_parameters.cpp"
			],
			[
				"test_search_n",
				"pastel\\test\\geometrytest\\test_search_nearest_bruteforce.cpp"
			],
			[
				"difference_ali",
				"pastel\\pastel\\sys\\difference_alignedbox_alignedbox.h"
			],
			[
				"templtae_b",
				"pastel\\pastel\\sys\\type_traits\\template_base.h"
			],
			[
				"remove_cv",
				"pastel\\pastel\\sys\\type_traits\\remove_cvref.h"
			],
			[
				"is_tepmlate_",
				"pastel\\pastel\\sys\\type_traits\\is_template_instance.h"
			],
			[
				"is_templtae",
				"pastel\\pastel\\sys\\type_traits\\is_template_base_of.h"
			],
			[
				"fold.h",
				"pastel\\pastel\\sys\\type_traits\\fold.h"
			],
			[
				"type_t",
				"pastel\\pastel\\sys\\type_traits.h"
			],
			[
				"concept.h",
				"pastel\\pastel\\sys\\concept.h"
			],
			[
				"breath_first",
				"pastel\\pastel\\sys\\graph\\breadth_first.h"
			],
			[
				"exponential_bi",
				"pastel\\pastel\\sys\\sequence\\exponential_binary_search.h"
			],
			[
				"test_conce",
				"pastel\\test\\systest\\test_concept.cpp"
			],
			[
				"warnn",
				"pastel\\warnings.txt"
			],
			[
				"restrict_d",
				"pastel\\restrict_deduction.txt"
			],
			[
				"most_refin",
				"pastel\\pastel\\sys\\concept\\most_refined_concept.h"
			],
			[
				"semigrop",
				"pastel\\pastel\\sys\\algebra\\additive_semigroup_concept.h"
			],
			[
				"concept.txt",
				"pastel\\pastel\\sys\\concept\\concept.txt"
			],
			[
				"normbij",
				"pastel\\pastel\\math\\normbijection\\normbijection_concept.h"
			],
			[
				"printable",
				"pastel\\pastel\\sys\\printable\\printable_concept.h"
			],
			[
				"normarch",
				"pastel\\pastel\\math\\normbijection\\normbijection_archetype.h"
			],
			[
				"eucl",
				"pastel\\pastel\\math\\normbijection\\euclidean_normbijection.h"
			],
			[
				"printable_con",
				"pastel\\pastel\\sys\\printable\\printable_concept.h"
			],
			[
				"generic_pro",
				"pastel\\pastel\\sys\\generic_programming.txt"
			],
			[
				"point_con",
				"pastel\\pastel\\sys\\point\\point_concept.h"
			],
			[
				"_concept",
				"pastel\\pastel\\sys\\pointset\\pointset_concept.h"
			],
			[
				"pointkdtree_fwd",
				"pastel\\pastel\\geometry\\pointkdtree\\pointkdtree_fwd.h"
			],
			[
				"pointkdtree.h",
				"pastel\\pastel\\geometry\\pointkdtree\\pointkdtree.h"
			],
			[
				"pointkdtree_sear",
				"pastel\\pastel\\geometry\\pointkdtree\\pointkdtree_search_nearest.h"
			],
			[
				"indirect_",
				"pastel\\pastel\\sys\\locator\\indirect_locator.h"
			],
			[
				"search_nearest",
				"pastel\\pastel\\geometry\\search_nearest_bruteforce.h"
			],
			[
				"brute",
				"pastel\\pastel\\geometry\\nearestset\\bruteforce_nearestset.h"
			],
			[
				"models_dire",
				"pastel\\pastel\\sys\\concept\\models_directly.hpp"
			],
			[
				"output",
				"pastel\\pastel\\sys\\output.h"
			],
			[
				"null_output",
				"pastel\\pastel\\sys\\output\\null_output.h"
			],
			[
				"models",
				"pastel\\pastel\\sys\\concept\\models.h"
			],
			[
				"output_con",
				"pastel\\pastel\\sys\\output\\output_concept.h"
			],
			[
				"normbijection_con",
				"pastel\\pastel\\math\\normbijection\\normbijection_concept.h"
			],
			[
				"normbnij",
				"pastel\\pastel\\math\\normbijection\\normbijections.h"
			],
			[
				"euclidean_no",
				"pastel\\pastel\\math\\normbijection\\euclidean_normbijection.h"
			],
			[
				"testsuite",
				"pastel\\pastel\\sys\\testing\\testsuite.h"
			],
			[
				"ensure.h",
				"pastel\\pastel\\sys\\ensure.h"
			],
			[
				"normbni",
				"pastel\\pastel\\math\\normbijection.h"
			],
			[
				"test_templ",
				"pastel\\test\\systest\\test_template.cpp"
			],
			[
				"normbijection",
				"pastel\\pastel\\math\\normbijection\\normbijection_concept.h"
			],
			[
				"eucnormbijection",
				"pastel\\pastel\\math\\normbijection\\euclidean_normbijection.h"
			],
			[
				"output_conc",
				"pastel\\pastel\\sys\\output\\output_concept.h"
			],
			[
				"input_con",
				"pastel\\pastel\\sys\\input\\input_concept.h"
			],
			[
				"core2signa",
				"tim\\tim\\core2\\signal_concept.h"
			],
			[
				"kl",
				"tim\\tim\\core\\differential_entropy_kl.hpp"
			],
			[
				"pointset_con",
				"pastel\\pastel\\sys\\pointset\\pointset_concept.h"
			],
			[
				"bruteforce",
				"pastel\\geometry\\search_nearest_bruteforce.h"
			],
			[
				"cmakeli",
				"tim\\CMakeLists.txt"
			],
			[
				"pointset",
				"tim\\core\\signalpointset.h"
			],
			[
				"tdtree",
				"pastel\\geometry\\tdtree\\tdtree.h"
			],
			[
				"point_point",
				"pastel\\sys\\point\\point_point.h"
			],
			[
				"tdtree.h",
				"pastel\\geometry\\tdtree\\tdtree.h"
			],
			[
				"locator_point",
				"pastel\\sys\\locator\\locator_point.h"
			],
			[
				"locator_con",
				"pastel\\sys\\locator\\locator_concept.h"
			],
			[
				"pointset_n",
				"pastel\\sys\\pointset\\pointset_concept.h"
			],
			[
				"tdtree_fwd",
				"pastel\\geometry\\tdtree\\tdtree_fwd.h"
			],
			[
				"ordered_set_o",
				"pastel\\sys\\algebra\\ordered_set_concept.h"
			],
			[
				"pointkdtree_search_n",
				"pastel\\geometry\\pointkdtree\\pointkdtree_search_nearest.h"
			],
			[
				"tdtree.",
				"pastel\\geometry\\tdtree\\tdtree.h"
			],
			[
				"is_template",
				"pastel\\sys\\type_traits\\is_template_instance.h"
			],
			[
				"tdtree_searc",
				"pastel\\geometry\\pointkdtree\\pointkdtree_search_nearest.h"
			],
			[
				"null_out",
				"pastel\\sys\\output\\null_output.h"
			],
			[
				"eucldiean",
				"pastel\\math\\normbijection\\euclidean_normbijection.h"
			],
			[
				"nearest_set",
				"pastel\\geometry\\nearestset\\nearestset_concept.h"
			],
			[
				"search_ne",
				"pastel\\geometry\\search_nearest_bruteforce.hpp"
			],
			[
				"function_co",
				"pastel\\sys\\function\\function_concept.h"
			],
			[
				"nearest_brut",
				"pastel\\geometry\\search_nearest_bruteforce.hpp"
			],
			[
				"nearest_co",
				"pastel\\geometry\\nearest_neighbor\\nearest_neighbor_concept.h"
			],
			[
				"big-oh",
				"publications\\big-oh\\big-oh.txt"
			],
			[
				"cop",
				"publications\\coupling.txt"
			],
			[
				"output_co",
				"pastel\\sys\\output\\output_concept.h"
			],
			[
				"neareset_nei",
				"pastel\\geometry\\nearest_neighbor\\nearest_neighbor_concept.h"
			],
			[
				"nearest",
				"pastel\\geometry\\nearest_neighbors.h"
			],
			[
				"match_points_kr.",
				"pastel\\geometry\\pattern_matching\\match_points_kr.hpp"
			],
			[
				"pointpolicy_co",
				"pastel\\sys\\pointpolicy_concept.h"
			],
			[
				"rational_real",
				"pastel\\sys\\rational\\rational_real.hpp"
			],
			[
				"divide_ini",
				"pastel\\sys\\math\\divide_infinity.h"
			],
			[
				"coup",
				"publications\\coupling.txt"
			],
			[
				"sfinae",
				"pastel\\sys\\sfinae_macros.h"
			],
			[
				"compiles",
				"pastel\\sys\\type_traits\\compiles.h"
			],
			[
				"model",
				"pastel\\sys\\concept\\models.h"
			],
			[
				"or",
				"pastel\\sys\\type_traits\\or.h"
			],
			[
				"input_conc",
				"pastel\\sys\\input\\input_concept.h"
			],
			[
				"location",
				"pastel\\sys\\locator\\location.h"
			],
			[
				"point_locator",
				"pastel\\sys\\point\\point_locator.h"
			],
			[
				"scalar_loca",
				"pastel\\sys\\locator\\scalar_locator.h"
			],
			[
				"native_real",
				"pastel\\sys\\real\\native_real.h"
			],
			[
				"point.h",
				"pastel\\sys\\point.h"
			],
			[
				"point_dim",
				"pastel\\sys\\point\\point_dimension.h"
			],
			[
				"point_conce",
				"pastel\\sys\\point\\point_concept.h"
			],
			[
				"rational_rea",
				"pastel\\sys\\rational\\rational_real.hpp"
			],
			[
				"bounding_sphere",
				"pastel\\geometry\\bounding\\bounding_sphere_pointset.h"
			],
			[
				"bounding_sphere_po",
				"pastel\\geometry\\bounding\\bounding_sphere_pointset.h"
			],
			[
				"input_co",
				"pastel\\sys\\input\\input_concept.h"
			],
			[
				"conformal",
				"pastel\\math\\conformalaffine2d.h"
			],
			[
				"pointset_conce",
				"pastel\\sys\\pointset\\pointset_concept.h"
			],
			[
				"pointset_co",
				"pastel\\+pastelgeometry\\pointset_concept.m"
			],
			[
				"pointset_get",
				"pastel\\sys\\pointset\\pointset_get.h"
			],
			[
				"pointset_si",
				"pastel\\sys\\pointset\\pointset_input.h"
			],
			[
				"pointset_di",
				"pastel\\sys\\pointset\\pointset_dimension.h"
			],
			[
				"mean",
				"pastel\\math\\statistic\\point_mean.h"
			],
			[
				"point_dimn",
				"pastel\\sys\\point\\point_dimension.h"
			],
			[
				"locator_n",
				"pastel\\sys\\locator\\locator_n.h"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
