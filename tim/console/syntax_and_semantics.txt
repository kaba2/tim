Syntax and semantics
====================

[[Parent]]: tim_console.txt

This section summarizes the syntax and semantics of the TIM Console
scripting language.

Formal syntax
-------------

A context-free grammar for the TimConsole's script files is
given in EBNF form as follows. 

	As an abbreviation we use:
	non-terminal % separator = (non-terminal (separator non-terminal)*)?

	grammar := statement*
	statement := declaration | expression | 'print' expression
	declaration := identifier '=' expression 
	expression := identifier | real_array | cell_array | integer | real | string | function_call
	function_call := identifier '(' expression % ',' ')'

	real_array := '[' real_list % ';' ']'
	real_list := number % ','

	cell_array := '{' cell_list % ';' '}'
	cell_list := identifier % ','

	number := real | integer
	identifier := alpha (alpha | digit)*
	
The following terminals are better given as regular expressions.

	alpha := [A-Z]|[a-z]|_
	digit := [0-9]
	integer := [+-]?[0-9]+
	real_nan := [Nn][Aa][Nn]
	real_inf := [Ii][Nn][Ff]
	real_num := [0-9]*\.[0-9]+([Ee][+-]?[0-9]+)?
	real := [+-]?({real_nan}|{real_inf}|{real_num})
	string := '"' [^"]* '"'

Semantics
---------

 * An expression statement 'expr' is equivalent to 'ans = expr'.

 * Real-arrays will be initialized to identity matrices (1's on the diagonal,
 0's elsewhere).
 
 * Arrays will be made as large as necessary to contain the listed elements.
 It is possible to leave elements unspecified.
 
 * Comments are ignored.
 
 * Whitespace (space, tab, new-line) delimits tokens. Their number
 is irrelevant allowing free form.
 
 * An identifier must be declared before use.
 