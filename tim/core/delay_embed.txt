Delay embedding
===============

[[Parent]]: user_documentation.txt

The _delay-embedding_ of a signal ''S : ZZ -> RR^n'' is a signal 
''R : ZZ -> RR^(kn)'' such that 

''R(t) = (
(S(t - (k - 1) Delta t)),
(...), 
(S(t - Delta t)), 
(S(t)))''

where
 
 * ''Delta t in ZZ'' is the _embedding delay_.
 
 * ''k in ZZ'' is the _embedding factor_.
 
 * ''kn'' is the _embedding dimension_.
 
A specific delay-embedding can be identified with the 
pair ''(Delta t, k)''.

The _future_ of the signal ''S'' under a given 
delay-embedding ''(Delta t, k)'' is given by
the signal ''Q : ZZ -> RR^n'' such that

''Q(t) = S(t + Delta t)''

Practice
--------

In the delay embedding, we do not allow for an embedding shift, i.e. 
translation of the signal before delay-embedding. This retains the time 
instant zero associated with the first element of the embedded signal.
A possible time shifting is done in the estimators via the lag 
parameters.

In practice the signals are only defined on a bounded support. 
The signals are extended to the whole domain by padding them
with NaNs. This results in NaNs in the beginning of each delay-embedded 
signal. For example, in TIM Matlab:

	>> A = delay_embed([1, 2, 3, 4], 3, 1);
	
Yields:

	A = NaN NaN 1 2 
	    NaN   1 2 3 
	      1   2 3 4
	      	     
The samples containing NaNs at the first element are clipped away 
when the control transfers from TIM Matlab to TIM Core and replaced 
with additional lags. For example, in the previous example A is 
equivalent to the signal [1, 2;2, 3;3, 4] with a lag of 2.
