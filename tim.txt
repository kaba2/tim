TIM
===

[Back to Homepage of Kalle Rutanen][Back]

[Back]: http://kaba.hilvi.org

Description
-----------

TIM is a C++ library for efficient estimation of information-theoretic measures
from continuous-valued time-series' in arbitrary dimensions. It has a Matlab interface 
as well as a console interface.

Features
--------

 * Estimation of Shannon differential entropy using various estimators.
 * Estimation of Renyi entropies.
 * Estimation of Tsallis entropies.
 * Estimation of a general class of entropy combinations including mutual information, 
partial mutual information, transfer entropy, and partial transfer entropy.
 * Estimation of Kullback-Leibler divergence.
 * Temporal estimation using time-windowing.
 * Estimation from an ensemble of time-series' representing trials of the same experiment.
 * Time-series' with arbitrary-dimensionality.
 * Multi-core parallel computation.
 * Three ways to use: as a C++ library, through TIM Matlab interface, or through TIM Console interface.

News
----

### 11.3.2010 - Released version 1.1.0

#### TIM Core

 * Added estimation of Renyi entropies.
 * Added estimation of Tsallis entropies.
 * Improved the handling of degenerate cases.
 * Made the output of temporal estimators to have a 
 width independent of lags (padded with NaNs) and the
 first element to correspond to time instant 0.
 * Generalized temporal estimation such that the
 contributions of the estimates can be weighted with 
 respect to the distance in time.
 * Fixed a bug when computing entropy combinations
 with signals of unequal length.

#### TIM Matlab

 * Packed all functionality to a single mex 
 file instead of multiple ones.
 * Allowed multiple lags to be specified for 
 entropy combination estimators.
 * Real arrays are now interpreted as cell-arrays 
 containing a single trial in the estimators.
 * Added trial permutation and permutation test.
 
#### TIM Matlab and TIM Console

 * Added delay-embedding.
 * Added support for the generalized versions
 of the temporal estimators.

#### Breaking changes

 * Removed the parameter to specify maximum relative 
 error in nearest neighbors searching because of too 
 large errors in entropy estimators to be of use. You
 will need to remove this argument from calls to
 `differential_entropy_kl` and `differential_entropy_kl_t`.
 
 * The now-introduced padded NaNs in temporal estimates 
 might make your current subsequent computations fail. 
 
 * In TIM Matlab, the new `filter` parameter has been
 inserted before the `threads`. If you used the `threads`
 parameter, you will need the add the `filter` argument
 before it.

[[Link]]: more_news.txt

Software
--------

Here we provide prebuilt binaries for Windows users. 

[Download TIM Console interface 1.1.0][Download_Console]

[Download TIM Matlab interface 1.1.0][Download_Matlab]

[[Link]]: previous_releases.txt

_Important: You need to have the Visual C++ 2008 SP1 Redistributable 
Package installed for TIM to work._

[Download_Matlab]: ./files/tim-matlab-1.1.0.zip
[Download_Console]: ./files/tim-console-1.1.0.zip

Source-code
-----------

The source-code for TIM is licensed under the _GNU Lesser GPL_ license, which is 
unrestrictive and non-viral. It should be emphasized that the intent of publishing 
the source-code for TIM is purely for educational/research purposes, rather than for 
actually building software that depends on it. This is because we can't guarantee stable 
interfaces, i.e., we continue development of TIM and in this process can make 
breaking changes to interfaces.

TIM is built on the [Pastel][] library which must also be 
installed if you want to build TIM yourself. It also uses some features
of the [Boost][] library.

On these documentation pages we provide an easy way to browse the source-code 
complete with coloring and linking. You might find this a more convenient alternative
when familiarizing yourself with the source-code, compared to downloading and viewing 
the raw source-code.

[Download TIM Source 1.1.0][Download_Source]

[Download_Source]: ./files/tim-1.1.0.zip
[Pastel]: http://kaba.hilvi.org/pastel
[Boost]: http://www.boost.org

Note on web-browsers
--------------------

This documentation uses MathML to display inlined mathematics.
Unfortunately not all browsers support MathML natively, including
Internet Explorer. In this case you will not be able to see the 
mathematical expressions correctly. While there is a plug-in 
available (MathPlayer) for adding this capability to Internet Explorer, 
in our tests this combination crashed the browser when viewing 
these pages. According to Wikipedia, some major web-browsers that 
currently display MathML natively include Mozilla Firefox, Opera, 
and Camino. At this point we can't do anything else than to direct 
you to use these browsers to view these pages.

Acknowledgements
----------------

The version 1.0 of TIM was programmed under funding from the EU project 
_GABA_ (FP6-2005-NEST-Path 043309).

[Global Approach to Brain Activity: From Cognition to Disease][GABA]

TIM Console interface and the update from version 1.0 to 1.1 were programmed 
under funding from the [Finnish Foundation for Technology Promotion][TES]

[German Gomez-Herrero][German] provided substantial amount of beta testing, feedback, 
and guidance during the development. He is also the driving force behind the 
idea of creating TIM, having created a similar library in Matlab himself. 

[GABA]: http://www.gaba-project.eu/
[TES]: http://www.kolumbus.fi/tes/
[German]: http://www.cs.tut.fi/~gomezher

[[add_outer DocChildren.no_links_for]]: 
	more_news.txt
	previous_releases.txt

[[Comment]]:
	The following is a javascript for Google Analytics by which we can
	monitor the visitor statistics of the TIM homepage.

[[Html]]:
	<script type="text/javascript">
	var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
	document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>
	<script type="text/javascript">
	try {
	var pageTracker = _gat._getTracker("UA-15174506-1");
	pageTracker._trackPageview();
	} catch(err) {}</script>

