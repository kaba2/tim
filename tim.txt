TIM
===

[[set tim_version]]: 1.3.0

[Back to Homepage of Kalle Rutanen][Back]

[Back]: http://kaba.hilvi.org

_TIM_ is a cross-platform C++11 and Matlab library for efficient 
non-linear time-series analysis. The version documented here 
is [[tim_version]]. The latest version can always be found from 
[here][TimHomepage].

[TimHomepage]: http://kaba.hilvi.org/tim

Features
--------

TIM can estimate

 * [differential entropy][Shannon],
 * [Renyi entropies][Renyi],
 * [Tsallis entropies][Tsallis],
 * [mutual information][MutualInformation], 
 * [conditional mutual information][ConditionalMutualInformation], 
 * [transfer entropy][TransferEntropy],
 * [conditional transfer entropy][ConditionalTransferEntropy],
 * [entropy combinations][Combinations],
 * [Kullback-Leibler divergence][Divergence],
 * using [temporal windowing][Temporal],
 * using multi-variate data,
 * using data from multiple trials, and
 * using multiple cores.

TIM can also do

 * non-linear prediction, and
 * non-linear noise removal,

TIM can be used either as a pure C++ library, or through Matlab,

[Shannon]: [[Ref]]: differential_entropy.txt
[Renyi]: [[Ref]]: renyi_entropy.txt
[Tsallis]: [[Ref]]: tsallis_entropy.txt
[Combinations]: [[Ref]]: entropy_combination.txt
[Divergence]: [[Ref]]: divergence.txt
[Temporal]: [[Ref]]: temporal_estimation.txt
[MutualInformation]: [[Ref]]: mutual_information.txt
[ConditionalMutualInformation]: [[Ref]]: partial_mutual_information.txt
[TransferEntropy]: [[Ref]]: transfer_entropy.txt
[ConditionalTransferEntropy]: [[Ref]]: partial_transfer_entropy.txt

Download
--------

Here you can download the latest prebuilt TIM Matlab.
The prebuilds include Mac OS X, Windows, and Linux, 
in both 32-bit and 64-bit modes.

[Download TIM Matlab [[tim_version]]][TIM-Matlab]

__Note__: For Windows, you need to have the 
[Visual C++ Redistributable for Visual Studio 2012 Update 2][VisualRedist] 
installed for the prebuilt TIM to work.

For previous versions, see the [release history][ReleaseHistory].

[VisualRedist]: http://www.microsoft.com/en-us/download/details.aspx?id=30679

[TIM-Matlab]: [[-+Ref]]: tim-matlab-[[tim_version]].zip
[ReleaseHistory]: [[Ref]]: release_history.txt

Source code
-----------

The source code for TIM is hosted on [BitBucket][] in a [Mercurial][] 
repository. Assuming you have Mercurial installed, the repository can 
be cloned from the command-line by

	hg clone https://bitbucket.org/kaba2/tim

A revision corresponding to a published version is tagged with the 
version number. 

[BitBucket]: http://bitbucket.org/kaba2/tim
[Mercurial]: http://mercurial.selenic.com

Issue tracker
-------------

The issue tracker for TIM is hosted on Bitbucket in [here][TimBugs].

[TimBugs]: https://bitbucket.org/kaba2/tim/issues

Acknowledgements
----------------

The version 1.0 of TIM was programmed under funding from the EU project 
[GABA][GABA] (FP6-2005-NEST-Path 043309). TIM Console and most of the update 
from version 1.0 to 1.1 were programmed under funding from the 
[Finnish Foundation for Technology Promotion][TES].

[Germán Gómez Herrero][German] is the driving force behind the idea of 
creating TIM, having created a similar library in Matlab himself. Germán
provided substantial amount of testing, feedback, and guidance 
during the development. He has also written the tutorials in this
documentation.

[GABA]: http://www.gaba-project.eu/
[TES]: http://www.kolumbus.fi/tes/
[German]: http://germangh.com 

[[Comment]]:
	The following is a javascript for Google Analytics by which we can
	monitor the visitor statistics of the TIM homepage.

[[Html]]:
	<script type="text/javascript">
	var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
	document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
	</script>
	<script type="text/javascript">
	try {
	var pageTracker = _gat._getTracker("UA-15174506-1");
	pageTracker._trackPageview();
	} catch(err) {}</script>

